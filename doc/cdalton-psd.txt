Spectrum:  I'm going to quibble on semantics for a second just to be clear.  A PSD is usually more than one FFT.  That is because the D in PSD stands for density, and you want to sum or average multiple FFTs to get an estimate for that density.  Let's ignore that for a second and just talk about the math behind the PSD.
To get a PSD, you do 10*log10(abs(fftshift(fft(DATA)))^2).  So far you have fft(DATA).  Next is fftshift.  Elements of the array you get out of the fft are called bins (frequency bins).  Because of the math behind the fft, 0Hz is the first bin.  But in a complex waveform (you said IQ so I assume you have complex input to the fft), 0Hz is at the center of the spectrum.  fftshift is a matlab helper function that does a circular shift of an array such that the first bin gets moved to the middle index because that's how people expect to see the spectrum.  Functionally it's not required, but you would be remiss to exclude it from a final product.
The next step is to take the magnitude (in Matlab, abs() takes the absolute value of a real number, or the complex modulus of a complex number.  Mathematically, they are the same operation (|.|).  But taking the magnitude of a complex number is not as simple as ignoring the sign.  For a complex number z = a + bi, |z| =  sqrt(a^2 + b^2) [this looks like the Pythagorean theorem because it is.  On the complex plane, a is the distance from the origin to z on the real axis and b is the distance from the origina to z on the imaginary axis].  Note that the magnitude has a square root, but in the original formula for the PSD the magnitude is raised to the 2nd power. Mathematically, this is because the P stands for Power and power is amplitude squared.  But it also means that you can forget the square root because you really need |z|^2 = a^2 + b^2.
Finally, the power scale is better viewed on a log plot.  That's where the 10*log10 comes in.  The multiplication by 10 is convention because that's the definition of decibles and that's what you're really trying to plot.

So the steps are:
- Take the FFT of the data
- circular shift the data such that the complex number at index 0 is now at index N/2
- Create a new real valued array to put the PSD in
- For each complex element in the FFT output, find the magnitude by mag = real^2 + imag^2
- For each magnitude, take log10 and then multiply by 10

That gives you one "sample" of a PSD.  If you plot that, you have hit your first milestone and you could stop there.  To be a real PSD, you usually have some amount of averaging.  That means that you would store that frame data away prior to the log10 call, run the entire process again to get a second frame, and add each element of the second frame to the first.  Repeat for K frames where K is a parameter of the PSD.  You would then divide each bin of the resulting PSD by K (because we're averaging), and then do the 10*log10() (note that averaging in the log domain is not the same as averaging in the linear domain and then taking the log).
